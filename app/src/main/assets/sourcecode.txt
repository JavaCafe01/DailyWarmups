/* Star Triangle Method */
public void makeTri(int heightWidth)
{
    String space = " ";
    String star = "*";
    int counter = 0;

    output.append("\n");
    for(int lineNum = 0; lineNum < heightWidth - 1; lineNum ++)
    {
        output.append(star);

        if(lineNum > 1)
        {
            counter ++;
        }
        for(int c = 0; c < lineNum + counter; c++)
        {
            //Recently changed
            output.append(space + space);
        }
        if(lineNum != 0)
        {
            output.append(star);
        }
        output.append("\n");
    }

    for(int i = 0; i < heightWidth; i ++)
    {
        //Recently changed
        output.append(star + space + space);
    }
}

/* Star Square Method */
public void makeSquare (int size)
{
    String star = "*";
    String space = " ";

    for(int x = 0; x < size; x ++)
    {
        for (int r = 0; r < size; r++)
        {
            output.append(star + space + space);
        }
        output.append("\n");
    }
}

/* Reverse String Method */
public String revString(String input)
{
    String output = "";
    for(int i = input.length() - 1; i >= 0; i--)
        output += "" + input. charAt(i);

    return output;
}

/* Flip Halves of a string */
public String flipHalve(String input)
{
    return input.substring((int)input.length()/2) + input.substring(0, (int)input.length()/2);
}

/* Translate to Piglatin Method */
public String transToPiglatin(String sentence)
{
    String translation = PigLatin.translate(sentence);
    return translation;
}    	
